imagesUsedBatchFilename				(filename order matters here: first images, then animations)
animationsUsedBatchFilename
initialStateName				(to be used at load time to set initial currentState index)
Controller_Parameters {
paramType paramName paramInitialValue
paramType1 paramName1 paramInitialValue1
(repeat adding parameters)
}

Animation_States {
stateName singleAnimationName stateSpeed
stateName1 singleAnimationName1 stateSpeed1
(repeat adding states)
}

Blend_States {
	{
	stateName numAnimationsInState stateSpeed
	controllerFloatParam1 controllerFloatParam2				(max of 2, min of 0, but it defaults to 1)
	animationName controllerFloatParam1Value controllerFloatParam2Value	(max of 2, min of 0, but it defaults to evenly distributed values)
	animationName1 controllerFloatParam1Value1 controllerFloatParam2Value1
	(repeat adding animations)
	}
	{
	stateName numAnimationsInState stateSpeed
	controllerFloatParam1 controllerFloatParam2
	animationName controllerFloatParam1Value1 controllerFloatParam2Value
	animationName1 controllerFloatParam1Value1 controllerFloatParam2Value1
	}
	(repeat adding states)
}

State_Transitions {
	{
	transitionName anyStateBool fromStateName toStateName exitTimeNormalized offsetNormalized	(names get converted to indexes)
	controllerParamType controllerParamName compareEnumName	transitionValue				(type will be: int/float/bool/trigger, if bool then don't look for compareEnumName)
	controllerParamType1 controllerParamName1 compareEnumName1 transitionValue1			(compare will be: greater/greaterEqual/less/lessEqual/equal/notEqual)
	(repeat adding parameter-value-compare tuples)
	}
	{
	transitionName1 anyStateBool1 fromStateName1 toStateName1 exitTimeNormalized1 offsetNormalized1
	controllerParamType controllerParamName compareEnumName	transitionValue
	controllerParamType1 controllerParamName1 compareEnumName1 transitionValue
	(repeat adding parameter-value-compare tuples)
	}
	(repeat adding transitions)
}